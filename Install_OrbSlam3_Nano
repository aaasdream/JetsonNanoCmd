
sudo apt update
sudo apt install -y build-essential cmake git libgtk2.0-dev pkg-config  libswscale-dev libtbb2 libtbb-dev
sudo apt install -y python-dev python3-dev python-numpy python3-numpy
sudo apt install -y curl
sudo apt install -y  libjpeg-dev libpng-dev libtiff-dev libjasper-dev 
sudo apt install -y libavcodec-dev libavformat-dev
sudo apt install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
sudo apt install -y libv4l-dev v4l-utils qv4l2 v4l2ucp libdc1394-22-dev
sudo apt install -y libpython2.7-dev
mkdir -p ~/orbslam3
cd ~/orbslam3


curl -L https://github.com/opencv/opencv/archive/4.1.0.zip -o opencv-4.1.0.zip
curl -L https://github.com/opencv/opencv_contrib/archive/4.1.0.zip -o opencv_contrib-4.1.0.zip
unzip opencv-4.1.0.zip 
unzip opencv_contrib-4.1.0.zip 
cd opencv-4.1.0/

#====================Install OPEN CV 4.1 with cuda========================
mkdir build
cd build/
cmake     -D WITH_CUDA=ON \
        -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-4.1.0/modules \
        -D WITH_GSTREAMER=ON \
        -D WITH_LIBV4L=ON \
        -D BUILD_opencv_python2=ON \
        -D BUILD_opencv_python3=ON \
        -D BUILD_TESTS=OFF \
        -D BUILD_PERF_TESTS=OFF \
        -D BUILD_EXAMPLES=OFF \
        -D CMAKE_BUILD_TYPE=RELEASE \
        -D CMAKE_INSTALL_PREFIX=/usr/local \
        ..
make -j2
sudo make install



echo "==============Install Pangolin=========================="
sudo apt install -y libgl1-mesa-dev
sudo apt install -y libglew-dev
sudo apt install -y libpython2.7-dev
sudo apt install -y pkg-config
sudo apt install -y ffmpeg libavcodec-dev libavutil-dev libavformat-dev  libswscale-dev libavdevice-dev
sudo apt install -y libdc1394-22-dev libraw1394-dev
sudo apt install -y libjpeg-dev libpng12-dev libtiff5-dev libopenexr-dev

cd ~/orbslam3
git clone https://github.com/stevenlovegrove/Pangolin.git
cd Pangolin
mkdir build && cd build
cmake \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr/local \
    ..
make
sudo make install 



#==========================Install Eigen 3======================
sudo apt-get install -y libblas-dev
sudo apt-get install -y liblapack-dev
sudo apt install  -y libeigen3.2.1-dev






#=====================PCL for ROS:=============================
sudo apt-get install -y libopenni2-dev
sudo apt-get install -y ros-melodic-pcl-ros


#===other=============================================================




#==========================ORB SLAM3========================
cd ~/orbslam3
git clone https://github.com/UZ-SLAMLab/ORB_SLAM3.git ORB_SLAM3
cd ORB_SLAM3
chmod +x build.sh
./build.sh


#============================ORB SLAM ROS========================================
cd ~/orbslam3
export ROS_PACKAGE_PATH=${ROS_PACKAGE_PATH}:~/orbslam3/Examples/ROS
echo "export ROS_PACKAGE_PATH=${ROS_PACKAGE_PATH}:~/orbslam3/Examples/ROS" >> ~/.bashrc
chmod +x build_ros.sh
./build_ros.sh
